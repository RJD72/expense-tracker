{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,E,E,O,C,e,I,G,E,E,O,C,mB,I,G,I,E,E,S,E,E,S,E,E,SCaA,SACG,cAAc,CAAC,mBACf,gBAAgB,CAAC,QAAS,EAAA,UAAS,EACtC,SACG,cAAc,CAAC,oBACf,gBAAgB,CAAC,QAAS,EAAA,WAAU,EAGvC,IAAM,EAAyB,AAAA,CAAA,EAAA,EAAA,UAAS,AAAT,EAAW,EAAA,EAAC,CAAG,gBAGnC,EAAe,EAAE,CAGtB,EAAO,SAAS,cAAc,CAAC,mBAC/B,EAAO,SAAS,cAAc,CAAC,mBAC/B,EAAU,SAAS,cAAc,CAAC,WAClC,EAAS,SAAS,cAAc,CAAC,UACjC,EAAU,SAAS,cAAc,CAAC,UAIxC,CAHkB,SAAS,cAAc,CAAC,QAGhC,YAAY,CAAG,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAG/D,IAAM,EAAY,IAAI,KAAK,YAAY,CAAC,QAAS,CAC/C,MAAO,WACP,SAAU,MACV,YAAa,QACf,GAGA,eAAe,EAAiB,CAAI,EAClC,GAAI,CAAC,EAAM,OAEX,EAAe,EAAE,CAEjB,IAAM,EAAI,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,EAAM,EAAwB,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,EAAM,SAAU,KAAM,EAAK,GAAG,GAGtE,AAFsB,CAAA,MAAM,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,EAApC,EAEc,OAAO,CAAC,AAAC,IACrB,EAAa,IAAI,CAAC,CAAE,GAAI,EAAI,EAAE,CAAE,GAAG,EAAI,IAAI,EAAE,AAAC,EAChD,GAEA,IACA,IACA,GACF,CAGA,SAAS,IACP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","sources":["<anon>","assets/js/script.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"1GfNc\", function(module, exports) {\n\n$parcel$export(module.exports, \"transactions\", () => $1395f6bf4db21581$export$3371c32cd402472f);\n$parcel$export(module.exports, \"loadTransactions\", () => $1395f6bf4db21581$export$3fee57091ceb61e8);\n\nvar $8hoa6 = parcelRequire(\"8hoa6\");\n\nvar $ilpIi = parcelRequire(\"ilpIi\");\n\nvar $kDiTP = parcelRequire(\"kDiTP\");\n// Attach Event Listeners\ndocument.getElementById(\"googleSignInBtn\").addEventListener(\"click\", (0, $kDiTP.signInUser));\ndocument.getElementById(\"googleSignOutBtn\").addEventListener(\"click\", (0, $kDiTP.signOutUser));\n// Get transactions collection\nconst $1395f6bf4db21581$var$transactionsCollection = (0, $ilpIi.collection)((0, $8hoa6.db), \"transactions\");\nlet $1395f6bf4db21581$export$3371c32cd402472f = [];\n// DOM Elements\nconst $1395f6bf4db21581$var$list = document.getElementById(\"transactionList\");\nconst $1395f6bf4db21581$var$form = document.getElementById(\"transactionForm\");\nconst $1395f6bf4db21581$var$balance = document.getElementById(\"balance\");\nconst $1395f6bf4db21581$var$income = document.getElementById(\"income\");\nconst $1395f6bf4db21581$var$expense = document.getElementById(\"expense\");\nconst $1395f6bf4db21581$var$dateInput = document.getElementById(\"date\");\n// Set default date\n$1395f6bf4db21581$var$dateInput.defaultValue = new Date().toISOString().split(\"T\")[0];\n// Currency Formatter\nconst $1395f6bf4db21581$var$formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    signDisplay: \"always\"\n});\n// Load Transactions from Firestore\nasync function $1395f6bf4db21581$export$3fee57091ceb61e8(user) {\n    if (!user) return;\n    $1395f6bf4db21581$export$3371c32cd402472f = [];\n    const q = (0, $ilpIi.query)($1395f6bf4db21581$var$transactionsCollection, (0, $ilpIi.where)(\"userId\", \"==\", user.uid));\n    const querySnapshot = await (0, $ilpIi.getDocs)(q);\n    querySnapshot.forEach((doc)=>{\n        $1395f6bf4db21581$export$3371c32cd402472f.push({\n            id: doc.id,\n            ...doc.data()\n        });\n    });\n    $1395f6bf4db21581$var$renderList();\n    $1395f6bf4db21581$var$updateTotal();\n    $1395f6bf4db21581$var$renderMonthlyView();\n}\n// Render monthly view\nfunction $1395f6bf4db21581$var$renderMonthlyView() {\n    const monthlyContainer = document.getElementById(\"monthly-view-container\");\n    monthlyContainer.innerHTML = \"\";\n    const monthlyData = {};\n    $1395f6bf4db21581$export$3371c32cd402472f.forEach(({ date: date, amount: amount, name: name, type: type })=>{\n        const transactionDate = new Date(date);\n        const monthKey = `${transactionDate.getFullYear()}-${(transactionDate.getMonth() + 1).toString().padStart(2, \"0\")}`;\n        if (!monthlyData[monthKey]) monthlyData[monthKey] = [];\n        monthlyData[monthKey].push({\n            name: name,\n            amount: amount,\n            type: type,\n            date: transactionDate.toDateString()\n        });\n    });\n    Object.entries(monthlyData).forEach(([month, transactions])=>{\n        const monthDiv = document.createElement(\"div\");\n        monthDiv.classList.add(\"month-view\");\n        const monthHeader = document.createElement(\"h4\");\n        monthHeader.textContent = `${month}`;\n        monthDiv.appendChild(monthHeader);\n        const transactionsList = document.createElement(\"ul\");\n        transactions.forEach(({ name: name, amount: amount, type: type, date: date })=>{\n            const sign = type === \"income\" ? 1 : -1;\n            const transactionItem = document.createElement(\"li\");\n            transactionItem.classList.add(\"transaction-item\");\n            transactionItem.classList.add(\"amount\");\n            transactionItem.classList.add(`${type}`);\n            transactionItem.innerHTML = `<strong style='color: black'>${name}:</strong>  ${$1395f6bf4db21581$var$formatCurrency(amount * sign)} ${date}`;\n            transactionsList.appendChild(transactionItem);\n        });\n        monthDiv.appendChild(transactionsList);\n        monthlyContainer.appendChild(monthDiv);\n    });\n}\n// Clear transactions when user signs out\nfunction $1395f6bf4db21581$var$clearTransactions() {\n    $1395f6bf4db21581$export$3371c32cd402472f.length = 0;\n    document.getElementById(\"transactionList\").innerHTML = \"\";\n    document.getElementById(\"balance\").textContent = \"$0.00\";\n    document.getElementById(\"income\").textContent = \"$0.00\";\n    document.getElementById(\"expense\").textContent = \"$0.00\";\n    document.getElementById(\"monthly-view-container\").innerHTML = \"\";\n}\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    (0, $kDiTP.monitorAuthState)((user)=>{\n        if (user) $1395f6bf4db21581$export$3fee57091ceb61e8(user);\n        else $1395f6bf4db21581$var$clearTransactions();\n    });\n});\n// Format Currency\nfunction $1395f6bf4db21581$var$formatCurrency(value) {\n    return value === 0 ? $1395f6bf4db21581$var$formatter.format(0).replace(/^[+-]/, \"\") : $1395f6bf4db21581$var$formatter.format(value);\n}\n// Create Transaction Item\nfunction $1395f6bf4db21581$var$createItem({ id: id, name: name, amount: amount, date: date, type: type }) {\n    const sign = type === \"income\" ? 1 : -1;\n    const li = document.createElement(\"li\");\n    li.innerHTML = `\n    <div class=\"name\">\n      <h4>${name}</h4>\n      <p>${new Date(date).toLocaleDateString()}</p>\n    </div>\n    <div class=\"amount ${type}\">\n      <span>${$1395f6bf4db21581$var$formatCurrency(amount * sign)}</span>\n    </div>\n  `;\n    li.addEventListener(\"click\", async ()=>{\n        if (confirm(\"Delete transaction?\")) {\n            await $1395f6bf4db21581$var$deleteTransaction(id);\n            $1395f6bf4db21581$var$renderMonthlyView();\n        }\n    });\n    $1395f6bf4db21581$var$renderMonthlyView();\n    return li;\n}\n// Update Balance\nfunction $1395f6bf4db21581$var$updateTotal() {\n    const incomeTotal = $1395f6bf4db21581$export$3371c32cd402472f.filter((trx)=>trx.type === \"income\").reduce((total, trx)=>total + trx.amount, 0);\n    const expenseTotal = $1395f6bf4db21581$export$3371c32cd402472f.filter((trx)=>trx.type === \"expense\").reduce((total, trx)=>total + trx.amount, 0);\n    const balanceTotal = incomeTotal - expenseTotal;\n    $1395f6bf4db21581$var$balance.textContent = $1395f6bf4db21581$var$formatCurrency(balanceTotal).replace(/^\\+/, \"\");\n    $1395f6bf4db21581$var$income.textContent = $1395f6bf4db21581$var$formatCurrency(incomeTotal);\n    $1395f6bf4db21581$var$expense.textContent = $1395f6bf4db21581$var$formatCurrency(expenseTotal * -1);\n}\n// Render List\nfunction $1395f6bf4db21581$var$renderList() {\n    $1395f6bf4db21581$var$list.innerHTML = \"\";\n    $1395f6bf4db21581$export$3371c32cd402472f.forEach((transaction)=>{\n        const li = $1395f6bf4db21581$var$createItem(transaction);\n        $1395f6bf4db21581$var$list.appendChild(li);\n    });\n}\n// Delete Transaction\nasync function $1395f6bf4db21581$var$deleteTransaction(id) {\n    await (0, $ilpIi.deleteDoc)((0, $ilpIi.doc)((0, $8hoa6.db), \"transactions\", id));\n    $1395f6bf4db21581$export$3371c32cd402472f.splice($1395f6bf4db21581$export$3371c32cd402472f.findIndex((trx)=>trx.id === id), 1);\n    $1395f6bf4db21581$var$renderList();\n    $1395f6bf4db21581$var$updateTotal();\n}\n// Add Transaction\n$1395f6bf4db21581$var$form.addEventListener(\"submit\", async (e)=>{\n    e.preventDefault();\n    const formData = new FormData($1395f6bf4db21581$var$form);\n    $1395f6bf4db21581$var$form.reset();\n    const user = (0, $8hoa6.auth).currentUser;\n    if (!user) {\n        alert(\"You must be logged in to add a transaction\");\n        return;\n    }\n    const newTransaction = {\n        name: formData.get(\"name\"),\n        amount: parseFloat(formData.get(\"amount\")),\n        date: new Date(formData.get(\"date\")).toISOString(),\n        type: formData.get(\"type\") === \"on\" ? \"expense\" : \"income\",\n        userId: user.uid\n    };\n    if (!newTransaction.name || isNaN(newTransaction.amount) || !newTransaction.date) {\n        alert(\"Please fill in all fields correctly.\");\n        return;\n    }\n    // Save to Firestore\n    const docRef = await (0, $ilpIi.addDoc)($1395f6bf4db21581$var$transactionsCollection, newTransaction);\n    $1395f6bf4db21581$export$3371c32cd402472f.push({\n        id: docRef.id,\n        ...newTransaction\n    });\n    $1395f6bf4db21581$var$renderList();\n    $1395f6bf4db21581$var$updateTotal();\n});\n// Load transactions when the page loads\n$1395f6bf4db21581$export$3fee57091ceb61e8();\n\n});\n\n\nparcelRequire(\"1GfNc\");\n\n//# sourceMappingURL=index.3d84b1c7.js.map\n","import { auth, db } from \"./firebaseConfig.js\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  getDocs,\r\n  deleteDoc,\r\n  doc,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { signInUser, signOutUser, monitorAuthState } from \"./auth.js\";\r\n\r\n// Attach Event Listeners\r\ndocument\r\n  .getElementById(\"googleSignInBtn\")\r\n  .addEventListener(\"click\", signInUser);\r\ndocument\r\n  .getElementById(\"googleSignOutBtn\")\r\n  .addEventListener(\"click\", signOutUser);\r\n\r\n// Get transactions collection\r\nconst transactionsCollection = collection(db, \"transactions\");\r\n\r\n// Initialize Transactions Array\r\nexport let transactions = [];\r\n\r\n// DOM Elements\r\nconst list = document.getElementById(\"transactionList\");\r\nconst form = document.getElementById(\"transactionForm\");\r\nconst balance = document.getElementById(\"balance\");\r\nconst income = document.getElementById(\"income\");\r\nconst expense = document.getElementById(\"expense\");\r\nconst dateInput = document.getElementById(\"date\");\r\n\r\n// Set default date\r\ndateInput.defaultValue = new Date().toISOString().split(\"T\")[0];\r\n\r\n// Currency Formatter\r\nconst formatter = new Intl.NumberFormat(\"en-US\", {\r\n  style: \"currency\",\r\n  currency: \"USD\",\r\n  signDisplay: \"always\",\r\n});\r\n\r\n// Load Transactions from Firestore\r\nasync function loadTransactions(user) {\r\n  if (!user) return;\r\n\r\n  transactions = [];\r\n\r\n  const q = query(transactionsCollection, where(\"userId\", \"==\", user.uid));\r\n  const querySnapshot = await getDocs(q);\r\n\r\n  querySnapshot.forEach((doc) => {\r\n    transactions.push({ id: doc.id, ...doc.data() });\r\n  });\r\n\r\n  renderList();\r\n  updateTotal();\r\n  renderMonthlyView();\r\n}\r\n\r\n// Render monthly view\r\nfunction renderMonthlyView() {\r\n  const monthlyContainer = document.getElementById(\"monthly-view-container\");\r\n  monthlyContainer.innerHTML = \"\";\r\n\r\n  const monthlyData = {};\r\n  transactions.forEach(({ date, amount, name, type }) => {\r\n    const transactionDate = new Date(date);\r\n    const monthKey = `${transactionDate.getFullYear()}-${(\r\n      transactionDate.getMonth() + 1\r\n    )\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n\r\n    if (!monthlyData[monthKey]) {\r\n      monthlyData[monthKey] = [];\r\n    }\r\n\r\n    monthlyData[monthKey].push({\r\n      name,\r\n      amount,\r\n      type,\r\n      date: transactionDate.toDateString(),\r\n    });\r\n  });\r\n\r\n  Object.entries(monthlyData).forEach(([month, transactions]) => {\r\n    const monthDiv = document.createElement(\"div\");\r\n    monthDiv.classList.add(\"month-view\");\r\n\r\n    const monthHeader = document.createElement(\"h4\");\r\n    monthHeader.textContent = `${month}`;\r\n    monthDiv.appendChild(monthHeader);\r\n\r\n    const transactionsList = document.createElement(\"ul\");\r\n    transactions.forEach(({ name, amount, type, date }) => {\r\n      const sign = type === \"income\" ? 1 : -1;\r\n      const transactionItem = document.createElement(\"li\");\r\n      transactionItem.classList.add(\"transaction-item\");\r\n      transactionItem.classList.add(\"amount\");\r\n      transactionItem.classList.add(`${type}`);\r\n      transactionItem.innerHTML = `<strong style='color: black'>${name}:</strong>  ${formatCurrency(\r\n        amount * sign\r\n      )} ${date}`;\r\n      transactionsList.appendChild(transactionItem);\r\n    });\r\n\r\n    monthDiv.appendChild(transactionsList);\r\n    monthlyContainer.appendChild(monthDiv);\r\n  });\r\n}\r\n\r\n// Clear transactions when user signs out\r\nfunction clearTransactions() {\r\n  transactions.length = 0;\r\n  document.getElementById(\"transactionList\").innerHTML = \"\";\r\n  document.getElementById(\"balance\").textContent = \"$0.00\";\r\n  document.getElementById(\"income\").textContent = \"$0.00\";\r\n  document.getElementById(\"expense\").textContent = \"$0.00\";\r\n  document.getElementById(\"monthly-view-container\").innerHTML = \"\";\r\n}\r\n\r\nexport { loadTransactions };\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  monitorAuthState((user) => {\r\n    if (user) {\r\n      loadTransactions(user);\r\n    } else {\r\n      clearTransactions();\r\n    }\r\n  });\r\n});\r\n\r\n// Format Currency\r\nfunction formatCurrency(value) {\r\n  return value === 0\r\n    ? formatter.format(0).replace(/^[+-]/, \"\")\r\n    : formatter.format(value);\r\n}\r\n\r\n// Create Transaction Item\r\nfunction createItem({ id, name, amount, date, type }) {\r\n  const sign = type === \"income\" ? 1 : -1;\r\n  const li = document.createElement(\"li\");\r\n\r\n  li.innerHTML = `\r\n    <div class=\"name\">\r\n      <h4>${name}</h4>\r\n      <p>${new Date(date).toLocaleDateString()}</p>\r\n    </div>\r\n    <div class=\"amount ${type}\">\r\n      <span>${formatCurrency(amount * sign)}</span>\r\n    </div>\r\n  `;\r\n\r\n  li.addEventListener(\"click\", async () => {\r\n    if (confirm(\"Delete transaction?\")) {\r\n      await deleteTransaction(id);\r\n      renderMonthlyView();\r\n    }\r\n  });\r\n\r\n  renderMonthlyView();\r\n  return li;\r\n}\r\n\r\n// Update Balance\r\nfunction updateTotal() {\r\n  const incomeTotal = transactions\r\n    .filter((trx) => trx.type === \"income\")\r\n    .reduce((total, trx) => total + trx.amount, 0);\r\n\r\n  const expenseTotal = transactions\r\n    .filter((trx) => trx.type === \"expense\")\r\n    .reduce((total, trx) => total + trx.amount, 0);\r\n\r\n  const balanceTotal = incomeTotal - expenseTotal;\r\n\r\n  balance.textContent = formatCurrency(balanceTotal).replace(/^\\+/, \"\");\r\n  income.textContent = formatCurrency(incomeTotal);\r\n  expense.textContent = formatCurrency(expenseTotal * -1);\r\n}\r\n\r\n// Render List\r\nfunction renderList() {\r\n  list.innerHTML = \"\";\r\n  transactions.forEach((transaction) => {\r\n    const li = createItem(transaction);\r\n    list.appendChild(li);\r\n  });\r\n}\r\n\r\n// Delete Transaction\r\nasync function deleteTransaction(id) {\r\n  await deleteDoc(doc(db, \"transactions\", id));\r\n  transactions.splice(\r\n    transactions.findIndex((trx) => trx.id === id),\r\n    1\r\n  );\r\n\r\n  renderList();\r\n  updateTotal();\r\n}\r\n\r\n// Add Transaction\r\nform.addEventListener(\"submit\", async (e) => {\r\n  e.preventDefault();\r\n  const formData = new FormData(form);\r\n  form.reset();\r\n\r\n  const user = auth.currentUser;\r\n\r\n  if (!user) {\r\n    alert(\"You must be logged in to add a transaction\");\r\n    return;\r\n  }\r\n\r\n  const newTransaction = {\r\n    name: formData.get(\"name\"),\r\n    amount: parseFloat(formData.get(\"amount\")),\r\n    date: new Date(formData.get(\"date\")).toISOString(),\r\n    type: formData.get(\"type\") === \"on\" ? \"expense\" : \"income\",\r\n    userId: user.uid,\r\n  };\r\n\r\n  if (\r\n    !newTransaction.name ||\r\n    isNaN(newTransaction.amount) ||\r\n    !newTransaction.date\r\n  ) {\r\n    alert(\"Please fill in all fields correctly.\");\r\n    return;\r\n  }\r\n\r\n  // Save to Firestore\r\n  const docRef = await addDoc(transactionsCollection, newTransaction);\r\n  transactions.push({ id: docRef.id, ...newTransaction });\r\n\r\n  renderList();\r\n  updateTotal();\r\n});\r\n\r\n// Load transactions when the page loads\r\nloadTransactions();\r\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$1395f6bf4db21581$export$3371c32cd402472f","$1395f6bf4db21581$export$3fee57091ceb61e8","$8hoa6","$ilpIi","$kDiTP","document","getElementById","addEventListener","signInUser","signOutUser","$1395f6bf4db21581$var$transactionsCollection","collection","db","$1395f6bf4db21581$var$list","$1395f6bf4db21581$var$form","$1395f6bf4db21581$var$balance","$1395f6bf4db21581$var$income","$1395f6bf4db21581$var$expense","$1395f6bf4db21581$var$dateInput","defaultValue","Date","toISOString","split","$1395f6bf4db21581$var$formatter","Intl","NumberFormat","style","currency","signDisplay","user","q","query","where","uid","querySnapshot","getDocs","forEach","doc","push","data","$1395f6bf4db21581$var$renderList","$1395f6bf4db21581$var$updateTotal","$1395f6bf4db21581$var$renderMonthlyView","monthlyContainer","innerHTML","monthlyData","date","amount","name","type","transactionDate","monthKey","getFullYear","getMonth","toString","padStart","toDateString","entries","month","transactions","monthDiv","createElement","classList","add","monthHeader","textContent","appendChild","transactionsList","transactionItem","$1395f6bf4db21581$var$formatCurrency","value","format","replace","incomeTotal","filter","trx","reduce","total","expenseTotal","transaction","li","$1395f6bf4db21581$var$createItem","toLocaleDateString","confirm","$1395f6bf4db21581$var$deleteTransaction","deleteDoc","splice","findIndex","monitorAuthState","length","preventDefault","formData","FormData","reset","auth","currentUser","alert","newTransaction","parseFloat","userId","isNaN","docRef","addDoc"],"version":3,"file":"index.3d84b1c7.js.map"}